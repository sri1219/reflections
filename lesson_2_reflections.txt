What happens when you initialize a repository? Why do you need to do it?

	Ans- We we initialize a new repository, git starts tracking the project and saves the versions of it, so that we can perform version control on it.

How is the staging area different from the working directory and the repository? What value do you think it offers? 

	Ans- Staging area contains any files from the recent commits unless you have made any changes.

How can you use the staging area to make sure you have one commit per logical change?

	Ans- You can you git diff to compare between working directory and staging area and see if there is atleast one logical change and commit them.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Ans- Suppose, When you have a working version and you may want to create a different version with more changes to this version, The you may create a new branch.
	Master branch - Always works which never breaks.
	Development branch - Active code is taking place on your project.
	experimental branch, unique feature branches.

How do the diagrams help you visualize the branch structure?
	Ans- Diagrams are good to help visualize the branch structure easily.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	Ans- if we merge two branches together, both the commits are merged and the current checked out branch is updated to the tip of last commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	Ans- 
