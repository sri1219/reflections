How did viewing a diff between two versions of a file help you see the bug that was introduced?
	
	Ans - Viewing the diff between the two files helps find the common bugs like typos but it is still manual work to find in which line the bug is created. It would be overhead in case of big files to find in which line the bug is created by comapring line by line.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	
	Ans - By having easy access to the version revision history, we could easily identify bugs by comparing the both versions.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	Ans- Pros are- I can choose when to save a version and I have a total control of saving versions. Cons are- if one creates too many commits, Version history is cluttered and difficult to read.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	
	Ans- Beacuse in programming, The changes in one files should be reflected in another.

How can you use the commands git log and git diff to view the history of files?
	
	Ans- git log can be used to see all the revisions/ commits and git diff can be used to compare the two versions by their commit ids.

How might using version control make you more confident to make changes that could break something?

	Ans- Very confident, Because I can always revert back to my versions with no bugs.

Now that you have your workspace set up, what do you want to try using Git for?

	Ans- Yes. Version control is amazing, except for the number of commands to remember.
	